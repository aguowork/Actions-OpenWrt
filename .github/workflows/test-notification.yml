name: 测试推送消息

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x.git
  REPO_BRANCH: openwrt-21.02

jobs:
  test-notification:
    runs-on: ubuntu-22.04
    steps:
      - name: 模拟编译结果
        id: mock_results
        run: |
          echo "start_time=2024-01-20 14:30:00" >> $GITHUB_OUTPUT
          echo "build_duration=2h15m" >> $GITHUB_OUTPUT
          
          # 模拟三个设备的成功编译结果
          cat << EOF >> $GITHUB_OUTPUT
          results<<EOF_MARKER
          AX6000|success|1月20日 15:30|https://github.com/${{ github.repository }}/releases/tag/2024.01.20-1430-2102-AX6000
          WR30U|success|1月20日 16:45|https://github.com/${{ github.repository }}/releases/tag/2024.01.20-1430-2102-WR30U
          360T7|success|1月20日 16:45|https://github.com/${{ github.repository }}/releases/tag/2024.01.20-1430-2102-360T7
          EOF_MARKER
          EOF

      - name: Send notification
        run: |
          # 处理编译结果并生成通知内容
          NOTIFICATION="<div style='font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px;'>"
          
          # 转义特殊字符
          escape_json() {
            echo "$1" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | sed 's/\n/\\n/g' | sed 's/\t/\\t/g'
          }
          
          # 标题部分
          NOTIFICATION="${NOTIFICATION}<div style='text-align:center;background-color:#409eff;color:white;padding:20px;border-radius:8px;margin-bottom:20px;'>"
          NOTIFICATION="${NOTIFICATION}<h2 style='margin:0;'>🔄 OpenWrt 固件编译通知</h2>"
          NOTIFICATION="${NOTIFICATION}<div style='margin-top:10px;font-size:14px;'>开始时间: ${{ steps.mock_results.outputs.start_time }}</div>"
          NOTIFICATION="${NOTIFICATION}</div>"
          
          # 编译环境信息
          NOTIFICATION="${NOTIFICATION}<div style='background-color:#f8f9fa;padding:15px;border-radius:4px;margin-bottom:20px;'>"
          NOTIFICATION="${NOTIFICATION}<div style='color:#606266;font-size:14px;'>📋 编译环���信息：</div>"
          NOTIFICATION="${NOTIFICATION}<div style='color:#909399;font-size:12px;margin-top:5px;'>• 运行环境: Ubuntu 22.04</div>"
          NOTIFICATION="${NOTIFICATION}<div style='color:#909399;font-size:12px;'>• 源码分支: ${REPO_BRANCH}</div>"
          NOTIFICATION="${NOTIFICATION}<div style='color:#909399;font-size:12px;'>• 源码仓库: <a href='${REPO_URL}' style='color:#409eff;text-decoration:none;'>immortalwrt-mt798x</a></div>"
          NOTIFICATION="${NOTIFICATION}</div>"
          
          # 编译结果
          RESULTS=""
          while IFS='|' read -r device status time link; do
            if [ "$status" = "success" ]; then
              # 成功项
              RESULTS="${RESULTS}<div style='background-color:#f0f9eb;border-left:4px solid #67c23a;padding:15px;margin:15px 0;border-radius:4px;box-shadow:0 2px 4px rgba(0,0,0,0.05);'>"
              RESULTS="${RESULTS}<div style='color:#67c23a;font-size:16px;font-weight:bold;'>✅ ${device}</div>"
              RESULTS="${RESULTS}<div style='color:#909399;font-size:13px;margin:8px 0;'>⏱️ 编译完成于: ${time}</div>"
              if [ "${link}" != "-" ]; then
                RESULTS="${RESULTS}<div style='margin:8px 0;display:flex;gap:10px;'>"
                RESULTS="${RESULTS}<a href='${link}' style='color:#409eff;text-decoration:none;font-size:13px;'>📥 下载固件</a>"
                RESULTS="${RESULTS}<copy style='color:#409eff;cursor:pointer;font-size:13px;' data-clipboard-text='${link}'>[复制链接]</copy>"
                RESULTS="${RESULTS}</div>"
              fi
              RESULTS="${RESULTS}</div>"
            else
              # 失败项
              RESULTS="${RESULTS}<div style='background-color:#fef0f0;border-left:4px solid #f56c6c;padding:15px;margin:15px 0;border-radius:4px;box-shadow:0 2px 4px rgba(0,0,0,0.05);'>"
              RESULTS="${RESULTS}<div style='color:#f56c6c;font-size:16px;font-weight:bold;'>❌ ${device}</div>"
              RESULTS="${RESULTS}<div style='color:#909399;font-size:13px;margin:8px 0;'>⏱️ 失败时间: ${time}</div>"
              RESULTS="${RESULTS}</div>"
            fi
          done <<< "${{ steps.mock_results.outputs.results }}"
          
          # 将编译结果添加到通知内容中
          NOTIFICATION="${NOTIFICATION}${RESULTS}"
          
          # 总结信息
          SUCCESS_COUNT=$(echo "${{ steps.mock_results.outputs.results }}" | grep -c "success")
          TOTAL_COUNT=$(echo "${{ steps.mock_results.outputs.results }}" | wc -l)
          
          NOTIFICATION="${NOTIFICATION}<div style='background-color:#f4f4f5;border-left:4px solid #909399;padding:15px;margin:15px 0;border-radius:4px;box-shadow:0 2px 4px rgba(0,0,0,0.05);'>"
          NOTIFICATION="${NOTIFICATION}<div style='font-weight:bold;color:#303133;'>📊 编译结果统计</div>"
          NOTIFICATION="${NOTIFICATION}<div style='display:flex;justify-content:space-between;margin-top:10px;'>"
          NOTIFICATION="${NOTIFICATION}<div style='color:#909399;font-size:13px;'>• 共 ${TOTAL_COUNT} 个固件</div>"
          NOTIFICATION="${NOTIFICATION}<div style='color:#67c23a;font-size:13px;'>• ${SUCCESS_COUNT} 个成功</div>"
          NOTIFICATION="${NOTIFICATION}<div style='color:#f56c6c;font-size:13px;'>• $((TOTAL_COUNT-SUCCESS_COUNT)) 个失败</div>"
          NOTIFICATION="${NOTIFICATION}</div>"
          NOTIFICATION="${NOTIFICATION}<div style='color:#909399;font-size:13px;margin-top:10px;'>⌛ 总耗时: ${{ steps.mock_results.outputs.build_duration }}</div>"
          NOTIFICATION="${NOTIFICATION}</div>"
          
          NOTIFICATION="${NOTIFICATION}</div>"
          
          # 使用转义函数处理通知内容
          ESCAPED_NOTIFICATION=$(escape_json "${NOTIFICATION}")
          
          # 构建完整的 JSON 数据
          JSON_DATA=$(cat <<EOF
          {
            "appToken": "AT_ryo91ZPH31fKLonPBFN5UwlxTkPl7Vf0",
            "content": "${ESCAPED_NOTIFICATION}",
            "summary": "OpenWrt 固件编译完成",
            "contentType": 2,
            "uids": ["UID_L22PV9Qdjy4q6P3d0dthW1TJiA3k"]
          }
          EOF
          )
          
          # 发送通知
          curl -X POST \
            -H "Content-Type: application/json" \
            -d "${JSON_DATA}" \
            https://wxpusher.zjiecode.com/api/send/message 